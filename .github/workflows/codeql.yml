name: "CodeQL"

on:
  pull_request:
    branches: [ "dev", "staging", "main" ]
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze
    runs-on: "ubuntu-latest"
    timeout-minutes: 360
    concurrency: codeql-lock-${{ github.repository }}-${{ github.ref }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ "csharp", "javascript" ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  lint_format:
    name: Lint and Format
    runs-on: "ubuntu-latest"
    timeout-minutes: 360
    concurrency: lint-format-lock-${{ github.repository }}-${{ github.ref }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Dependencies
      working-directory: ./src/project-2
      run: |
        #!/bin/bash
        set -e
        npm install
      continue-on-error: false

    - name: Run ESLint
      working-directory: ./src/project-2
      run: |
        #!/bin/bash
        set -e
        npx eslint
      continue-on-error: true
      id: eslint

    - name: Check ESLint Results
      working-directory: ./src/project-2
      run: |
        #!/bin/bash
        set -e
        echo "ESLint found issues"
      if: steps.eslint.outcome == 'failure'

    - name: Restore Dependencies
      working-directory: ./src/project-1
      run: |
        #!/bin/bash
        set -e
        dotnet format
      continue-on-error: false

    - name: Restore Dependencies
      working-directory: ./src/project-1
      run: |
        #!/bin/bash
        set -e
        dotnet restore
      continue-on-error: false

    - name: Build Project
      working-directory: ./src/project-1
      run: |
        #!/bin/bash
        set -e
        dotnet build --configuration Release --no-restore
      continue-on-error: false
